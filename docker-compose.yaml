version: '3.8'

services:
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=changeme
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD", "curl", "-f", "-u", "elastic:changeme", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - elastic

  setup-elasticsearch:
    container_name: setup-elasticsearch
    image: curlimages/curl:latest
    depends_on:
      elasticsearch:
        condition: service_healthy
    command: >
      sh -c '
        curl -X POST -u elastic:changeme "http://elasticsearch:9200/_security/user/kibana_system/_password" -H "Content-Type: application/json" -d "{\"password\":\"changeme\"}"
        curl -X POST -u elastic:changeme "http://elasticsearch:9200/_security/user/apm_system/_password" -H "Content-Type: application/json" -d "{\"password\":\"changeme\"}"
      '
    networks:
      - elastic

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.9.1
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=changeme
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elastic

  apm-server:
    container_name: apm-server
    image: docker.elastic.co/apm/apm-server:8.9.1
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E apm-server.host=0.0.0.0:8200
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
        -E output.elasticsearch.username=elastic
        -E output.elasticsearch.password=changeme
    ports:
      - "8200:8200"
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_started
    networks:
      - elastic

  flask-app:
    container_name: flask-app
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ELASTIC_APM_SERVER_URL=http://apm-server:8200
      - ELASTIC_APM_SERVICE_NAME=flask-app
      - ELASTIC_APM_SECRET_TOKEN=
      - ELASTIC_APM_ENVIRONMENT=development
    ports:
      - "5000:5000"
    depends_on:
      - apm-server
    networks:
      - elastic

networks:
  elastic:
    driver: bridge

volumes:
  esdata:
    driver: local